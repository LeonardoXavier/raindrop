<?xml version="1.0" encoding="UTF-8"?>
<xbl:xbl
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:xbl="http://www.w3.org/ns/xbl">

  <xbl:binding id="query">
    <xbl:template>
      <span>I am the query binding.  Perhaps you would do faceting here?</span>
    </xbl:template>
    <xbl:implementation><![CDATA[
      ({
        resultsAhoy: function(aConversations) {
          console.log("results ahoy", aConversations);
          var convNode = $("#conversations").empty();
          convNode.append(aConversations.map(function (conversation) {
            var node = $("<div/>").addClass("auco_contact")[0];
            ElementXBL.prototype.addBinding.call(node, "messages.xml#conversation");
            node.setConversation(conversation);
            return node;
          }));
        },
        updateConstraints: function(aConstraints) {
          console.log("updating constraints");
          Gloda.queryByInvolved(aConstraints.getContacts(), this.resultsAhoy, this);
          console.log("constraints updated");
        }
      })
    ]]></xbl:implementation>
    <xbl:handlers>
      <xbl:handler event="click"><![CDATA[

      ]]></xbl:handler>
    </xbl:handlers>
  </xbl:binding>

  <xbl:binding id="conversation">
    <xbl:template>
      <div class="checkbox">
        <input id="checkbox" type="checkbox" tabindex="-1"/>
      </div>
      <div class="target">
        <div class="header">
          <div class="meta">
            <div id="oldestMessageDate" class="oldestMessageDate"/>
            <div id="attachments" class="attachments"/>
          </div>
          <div id="subject" class="subject"/>
          <div class="addressing">
            <span id="author" class="author"/>
            <span id="verb" class="verb">writes</span>
            <div id="recipients" class="recipients"/>
            <span id="date" class="date"/>
          </div>
          <div id="tags" class="tags"/>
        </div>
        <div id="snippet" class="body"/>
      </div>
      <div id="replies" class="replies"/>
    </xbl:template>
    <xbl:resources>
      <xbl:style><![CDATA[
/* CONVERSATION */
:bound-element { padding: 1em 1px; margin: 0px;
               border-top: 1px solid transparent; border-bottom: 1px solid #ddd;
               display: block;
               color: #555; background-color: #f5f6f7; /* default read */
              }
:bound-element:focus { border: 1px dotted #111; padding: 1em 0px; }
:bound-element[unread="true"]:focus { border: 1px dotted #111; padding: 1em 0px; }
:bound-element:focus:last-child { border: 1px dotted #111; padding: 1em 0px; }
:bound-element:focus:first-child { border: 1px dotted #111; padding: 1em 0px; }
:bound-element:last-child { border-bottom: 1px solid transparent; }
:bound-element:first-child { border-top: 1px solid #ddd; }

:bound-element > .target > .header,
:bound-element > .target > .body,
:bound-element > .target > .subject,
:bound-element > .replies { margin-left: 24px; font-size: 95%; }

:bound-element > .target { display: block; padding: 0.2em 0em; padding-right: 1em; }
:bound-element > .target { cursor: pointer; }

/* CHECKBOX */
.checkbox { float: left; text-align: center; width: 24px; height: 24px;
            padding: 0.1em 0.2em }
.checkbox > input { vertical-align: middle; }

/* HEADER */
.header { margin-bottom: 0.5em; }
.header .meta { float: right; padding-left: 2em; text-align: right; color: #999; font-size: 90%; }
.header .meta .attachments { padding-right: 18px; background: url("chrome://messenger/skin/icons/attachment.png") transparent no-repeat center right; display: none; }
.header .meta .attachments[count] { display: inline; }
.header .meta .attachments:before { content: "("; }
.header .meta .attachments:after { content: ")"; }
.header .addressing .verb { font-size: 90%; color: #777; }
.header .addressing .date { color: #999; font-size: 90%; }
.header .addressing .date:before { content: "\2014  "; }

.recipients { display: inline; color: #222; }
.recipients .identity:first-child:before { content: ""; }
.recipients .identity:after { content: ", "; }
.recipients .identity:last-child:after { content: ""; }
/* this will limit the number of recipients shown to the first 7
   also adding an elipsis '...' after the 6th (if exists) */
.recipients .identity:nth-child(n+7) { display: none; }
.recipients .identity:nth-child(0n+6):after { content: "..."; }
.recipients .you { }

:bound-element > .target > .header > .subject { white-space: nowrap; overflow: hidden;
                                              font-size: 115%; font-weight: bold;
                                              color: #555; }
:bound-element > .target > .body { color: #555; padding-left: 1em; }

:bound-element > .target > .tags span { -moz-border-radius: 0.3em; padding: 0em 0.4em; }
:bound-element > .target > .folder { background-color: #faf0b8; border: 1px solid #ede4af; }

/* REPLIES */
.replies { padding: 0em 3em; }

      ]]></xbl:style>
    </xbl:resources>
    <xbl:implementation><![CDATA[
      ({
        conversation: null,
        setConversation: function(aConversation) {
          this.conversation = aConversation;
          this.shadowTree.getElementById("oldestMessageDate").textContent =
            makeTimestampFriendly(this.conversation.oldest);
          var firstMessage = this.conversation.messages[0];
          this.shadowTree.getElementById("subject").textContent = firstMessage.subject;
          this.shadowTree.getElementById("snippet").textContent = firstMessage.bodySnippet;
          this.shadowTree.getElementById("author").textContent = firstMessage.from.name;
          this.shadowTree.getElementById("date").textContent =
            makeTimestampFriendly(firstMessage.timestamp);

          var replyNodes = this.shadowTree.getElementById("replies");
          for (var iMsg = 1; iMsg < this.conversation.messages.length; iMsg++) {
            var message = this.conversation.messages[iMsg];
            var node = $("<div/>")[0];
            ElementXBL.prototype.addBinding.call(node, "messages.xml#reply");
            node.setMessage(message);
            replyNodes.appendChild(node);
          }
        },
      })
    ]]></xbl:implementation>
  </xbl:binding>

  <xbl:binding id="reply">
    <xbl:template>
      <div class="author">
        <span id="from" class="name"/>
        <span id="date" class="data"/>
      </div>
      <div id="snippet" class="body"/>
    </xbl:template>
    <xbl:resources>
      <xbl:style><![CDATA[
/* REPLY */
:bound-element { display: list-item; list-style: none; margin: 0.5em 0em; }
:bound-element:hover { list-style: none outside url("chrome://messenger/skin/icons/arrow/arrow-right.png"); }
:bound-element { cursor: pointer; }

:bound-element > .author > .date { color: #adb0a9; font-size: 90%; }
:bound-element > .author > .date:before { content: "\2014 "; }
:bound-element > .body { padding-left: 1em; color: #666; white-space: nowrap; overflow: hidden;  }
      ]]></xbl:style>
    </xbl:resources>
    <xbl:implementation><![CDATA[
      ({
        setMessage: function(aMessage) {
          this.message = aMessage;
          this.shadowTree.getElementById("from").textContent = aMessage.from.name;
          this.shadowTree.getElementById("date").textContent =
            makeTimestampFriendly(aMessage.timestamp);
          this.shadowTree.getElementById("snippet").textContent = aMessage.bodySnippet;
        },
      })
    ]]></xbl:implementation>
  </xbl:binding>

  <xbl:binding id="message">
    <xbl:template>
      <div>
        <span id="subject"></span><br/>
        <pre id="body"></pre>
      </div>
    </xbl:template>
    <xbl:implementation><![CDATA[
      ({
        setMessage: function(aMessage) {
          this._message = aMessage;
          this.shadowTree.getElementById("subject").textContent = this._message.headers.Subject;
          this.shadowTree.getElementById("body").textContent = this._message.bodyPart.data;
        },
      })
    ]]></xbl:implementation>
    <xbl:handlers>
      <xbl:handler event="click"><![CDATA[
      
      ]]></xbl:handler>
    </xbl:handlers>
  </xbl:binding>
</xbl:xbl>
